{"version":3,"sources":["Hooks/useLocalStorage.js","Components/PastEvents.js","Components/Today.js","Components/UpcomingEvents.js","Components/AddEvent.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","PastEvents","pastEvents","onDelete","sortedEvents","slice","sort","a","b","date","map","event","className","color","title","icon","type","fixedWidth","formatDistanceToNow","parseISO","addSuffix","onClick","id","Today","format","Date","UpcomingEvents","upcomingEvents","AddEvent","onAdd","toggleModal","setTitle","setDate","setType","setColor","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","localDate","toString","alert","placeholder","ref","onChange","target","name","checked","htmlFor","App","library","add","faPlus","faCheckCircle","faClock","faTimes","faPlane","faUserFriends","faCalendarAlt","faGlassCheers","faBiking","faMusic","faTrashAlt","showAddEvent","setShowAddEvent","allEvents","setAllEvents","setPastEvents","setUpcomingEvents","deleteTask","filter","isBefore","isAfter","length","Math","floor","random","newEvent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAsCeA,MApCf,SAAyBC,EAAKC,GAG5B,MAAsCC,oBAAS,WAC7C,IAEE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OADAC,QAAQC,IAAIF,GACLR,MATX,mBAAOW,EAAP,KAAoBC,EAApB,KA8BA,MAAO,CAACD,EAfS,SAACE,GAChB,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,O,8CCHHU,EAzBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxBC,EAAeF,EAAWG,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,KAAO,GAAI,KAE7E,OACI,mCACKL,EAAaM,KAAI,SAACC,GAAD,OACd,sBAAKC,UAAS,2BAAsBD,EAAME,OAA1C,UACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMG,QACnC,sBAAMF,UAAS,yBAAoBD,EAAME,OAAzC,SAAkD,cAAC,IAAD,CAAiBE,KAAMJ,EAAMK,KAAMC,YAAU,SAEnG,sBAAKL,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SAA4B,cAAC,IAAD,CAAiBG,KAAK,mBAClD,sBAAKH,UAAU,aAAf,UACI,sBAAMA,UAAU,eAAhB,sBACA,sBAAMA,UAAU,aAAhB,SAA8BM,YAAoBC,YAASR,EAAMF,MAAO,CAACW,WAAW,SAExF,wBAAQR,UAAU,aAAaS,QAAS,kBAAMlB,EAASQ,EAAMW,KAA7D,SAAkE,cAAC,IAAD,CAAiBP,KAAK,YAAYE,YAAU,WAX9DN,EAAMW,U,QCO/DC,EAdD,WACV,OACI,yBAASX,UAAU,kBAAnB,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,cAAhB,sBACA,sBAAMA,UAAU,aAAhB,SAA8BY,YAAO,IAAIC,KAAQ,gBAErD,sBAAMb,UAAU,gBCkBjBc,EAzBQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBxB,EAAe,EAAfA,SAChCC,EAAeuB,EAAetB,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,KAAO,GAAI,KAEjF,OACI,mCACKL,EAAaM,KAAI,SAACC,GAAD,OACd,sBAAKC,UAAS,2BAAsBD,EAAMK,KAA5B,YAAoCL,EAAME,OAAxD,UACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMG,QACnC,sBAAMF,UAAS,yBAAoBD,EAAME,OAAzC,SAAkD,cAAC,IAAD,CAAiBE,KAAMJ,EAAMK,KAAMC,YAAU,SAEnG,sBAAKL,UAAU,aAAf,UACI,sBAAMA,UAAU,aAAhB,SAA6B,cAAC,IAAD,CAAiBG,KAAK,YACnD,sBAAKH,UAAU,aAAf,UACI,sBAAMA,UAAU,eAAhB,wBACA,sBAAMA,UAAU,aAAhB,SAA8BM,YAAoBC,YAASR,EAAMF,MAAO,CAACW,WAAW,SAExF,wBAAQR,UAAU,aAAaS,QAAS,kBAAMlB,EAASQ,EAAMW,KAA7D,SAAkE,cAAC,IAAD,CAAiBP,KAAK,YAAYE,YAAU,WAXhDN,EAAMW,UCsL7EM,EA5LE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvB,EAA0B9C,mBAAS,IAAnC,mBAAO8B,EAAP,KAAciB,EAAd,KACA,EAAwB/C,mBAAS,IAAjC,mBAAOyB,EAAP,KAAauB,EAAb,KACA,EAAwBhD,mBAAS,IAAjC,mBAAOgC,EAAP,KAAaiB,EAAb,KACA,EAA0BjD,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcqB,EAAd,KACMC,EAAWC,mBAyCjB,OAJAC,qBAAU,WACNF,EAASG,QAAQC,UAClB,IAGC,qCACI,uBAAM3B,UAAU,WAAW4B,SAzClB,SAACC,GACdA,EAAEC,iBAEF,IAAMC,EAAYlC,EAAKmC,WAEnB9B,EAICL,EAIAO,EAIAH,GAKLgB,EAAM,CAAEf,QAAOL,KAAMkC,EAAW3B,OAAMH,UAEtCkB,EAAS,IACTC,EAAQ,IACRC,EAAQ,IACRC,EAAS,KATLW,MAAM,yBAJNA,MAAM,4BAJNA,MAAM,yBAJNA,MAAM,2BAmCN,UACI,sBAAKjC,UAAU,cAAf,UACI,2CACA,wBAAQA,UAAU,YAAYS,QAd9B,SAACoB,GACbA,EAAEC,iBACFZ,KAYY,SAAgD,cAAC,IAAD,CAAiBf,KAAK,QAAQE,YAAU,SAE5F,sBAAKL,UAAU,eAAf,UACI,0CACA,uBACII,KAAK,OACL8B,YAAY,YACZlD,MAAOkB,EACPiC,IAAKZ,EACLa,SAAU,SAACP,GAAD,OAAOV,EAASU,EAAEQ,OAAOrD,aAG3C,sBAAKgB,UAAU,eAAf,UACI,yCACA,uBACII,KAAK,OACL8B,YAAY,aACZlD,MAAOa,EACPuC,SAAU,SAACP,GAAD,OAAOT,EAAQS,EAAEQ,OAAOrD,aAG1C,sBAAKgB,UAAU,eAAf,UACI,6CACA,sBAAKA,UAAU,mBAAf,UACQ,uBACII,KAAK,QACLkC,KAAK,aACL5B,GAAG,UACH1B,MAAM,eACNuD,QAAkB,iBAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,UAAUwC,QAAQ,UAAnC,SAA6C,cAAC,IAAD,CAAiBrC,KAAK,mBACrE,uBACIC,KAAK,QACLkC,KAAK,aACL5B,GAAG,UACH1B,MAAM,eACNuD,QAAkB,iBAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,UAAUwC,QAAQ,UAAnC,SAA6C,cAAC,IAAD,CAAiBrC,KAAK,mBACrE,uBACIC,KAAK,QACLkC,KAAK,aACL5B,GAAG,OACH1B,MAAM,eACNuD,QAAkB,iBAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,OAAOwC,QAAQ,OAAhC,SAAuC,cAAC,IAAD,CAAiBrC,KAAK,mBAC/D,uBACIC,KAAK,QACLkC,KAAK,aACL5B,GAAG,SACH1B,MAAM,QACNuD,QAAkB,UAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,SAASwC,QAAQ,SAAlC,SAA2C,cAAC,IAAD,CAAiBrC,KAAK,YACnE,uBACIC,KAAK,QACLkC,KAAK,aACL5B,GAAG,QACH1B,MAAM,QACNuD,QAAkB,UAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,QAAQwC,QAAQ,QAAjC,SAAyC,cAAC,IAAD,CAAiBrC,KAAK,YACjE,uBACIC,KAAK,QACLkC,KAAK,aACL5B,GAAG,SACH1B,MAAM,SACNuD,QAAkB,WAATnC,EACTgC,SAAU,SAACP,GAAD,OAAOR,EAAQQ,EAAEQ,OAAOrD,QAClCgB,UAAU,qBACZ,uBAAOA,UAAU,SAASwC,QAAQ,SAAlC,SAA2C,cAAC,IAAD,CAAiBrC,KAAK,mBAG/E,sBAAKH,UAAU,eAAf,UACI,0CACA,sBAAKA,UAAU,eAAf,UACQ,uBACII,KAAK,QACLkC,KAAK,QACL5B,GAAG,MACH1B,MAAM,MACNuD,QAAmB,QAAVtC,EACTmC,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOrD,QACnCgB,UAAU,qBACZ,uBAAOA,UAAU,MAAMwC,QAAQ,QACjC,uBACIpC,KAAK,QACLkC,KAAK,QACL5B,GAAG,QACH1B,MAAM,QACNuD,QAAmB,UAAVtC,EACTmC,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOrD,QACnCgB,UAAU,qBACZ,uBAAOA,UAAU,QAAQwC,QAAQ,UACnC,uBACIpC,KAAK,QACLkC,KAAK,QACL5B,GAAG,OACH1B,MAAM,OACNuD,QAAmB,SAAVtC,EACTmC,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOrD,QACnCgB,UAAU,qBACZ,uBAAOA,UAAU,OAAOwC,QAAQ,SAClC,uBACIpC,KAAK,QACLkC,KAAK,QACL5B,GAAG,SACH1B,MAAM,SACNuD,QAAmB,WAAVtC,EACTmC,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOrD,QACnCgB,UAAU,qBACZ,uBAAOA,UAAU,SAASwC,QAAQ,WACpC,uBACIpC,KAAK,QACLkC,KAAK,QACL5B,GAAG,OACH1B,MAAM,OACNuD,QAAmB,SAAVtC,EACTmC,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOrD,QACnCgB,UAAU,qBACZ,uBAAOA,UAAU,OAAOwC,QAAQ,eAG9C,wBAAQxC,UAAU,YAAYI,KAAK,SAAnC,0BAEJ,qBAAKJ,UAAU,gB,cC9FZyC,EAhFH,WACVC,IAAQC,IAAIC,IAAQC,IAAeC,IAASC,IAASC,IAASC,IAAeC,IAAeC,IAAeC,IAAUC,IAASC,KAE9H,MAAwClF,oBAAU,GAAlD,mBAAOmF,EAAP,KAAqBC,EAArB,KAEA,EAAkCvF,EAAgB,YAAa,IAA/D,mBAAOwF,EAAP,KAAkBC,EAAlB,KAsCA,EAAoCtF,mBAAS,IAA7C,mBAAOkB,EAAP,KAAmBqE,EAAnB,KACA,EAA4CvF,mBAAS,IAArD,mBAAO2C,EAAP,KAAuB6C,EAAvB,KAWMC,EAAa,SAACnD,GAClBgD,EAAaD,EAAUK,QAAO,SAAC/D,GAAD,OAAWA,EAAMW,KAAOA,OAIlDQ,EAAc,WAClBsC,GAAiBD,IAQnB,OALA9B,qBAAU,WACRkC,EAAcF,EAAUK,QAAO,SAAA/D,GAAK,OAAIgE,YAASxD,YAASR,EAAMF,MAAO,IAAIgB,UAC3E+C,EAAkBH,EAAUK,QAAO,SAAA/D,GAAK,OAAIiE,YAAQzD,YAASR,EAAMF,MAAO,IAAIgB,YAC7E,CAAC4C,IAGF,sBAAKzD,UAAU,MAAf,UACGV,EAAW2E,OAAS,EAAI,cAAC,EAAD,CAAY3E,WAAYA,EAAYC,SAAUsE,IAAiB,GACxF,cAAC,EAAD,IACC9C,EAAekD,OAAS,EAAI,cAAC,EAAD,CAAgBlD,eAAgBA,EAAgBxB,SAAUsE,IAAiB,GACvGN,GAAgB,cAAC,EAAD,CAAUtC,MA3Bd,SAAClB,GAChB,IAAMW,EAAKwD,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,EACxCC,EAAQ,aAAK3D,MAAOX,GAC1B2D,EAAa,GAAD,mBAAKD,GAAL,CAAgBY,KAC5Bb,GAAiBD,IAuB6BrC,YAAaA,IACzD,wBAAQlB,UAAU,UAAUS,QAASS,EAArC,SAAkD,cAAC,IAAD,CAAiBf,KAAK,eCnF9EmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8eb60fa5.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","import { formatDistanceToNow, parseISO } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst PastEvents = ({ pastEvents, onDelete }) => {\n    const sortedEvents = pastEvents.slice().sort((a, b) => a.date > b.date ? 1: -1);\n\n    return (\n        <>\n            {sortedEvents.map((event) => (\n                <div className={`event-contrainer ${event.color}`} key={event.id}>\n                    <div className=\"event-header\">\n                        <h2 className=\"event-title\">{event.title}</h2>\n                        <span className={`event-category ${event.color}`}><FontAwesomeIcon icon={event.type} fixedWidth /></span>\n                    </div>\n                    <div className=\"event-body\">\n                        <div className=\"event-icon\"><FontAwesomeIcon icon=\"check-circle\" /></div>\n                        <div className=\"event-text\">\n                            <span className=\"event-timing\">Happened</span>\n                            <span className=\"event-date\">{formatDistanceToNow(parseISO(event.date), {addSuffix: true})}</span>\n                        </div>\n                        <button className='btn-delete' onClick={() => onDelete(event.id)}><FontAwesomeIcon icon=\"trash-alt\" fixedWidth/></button>\n                    </div>\n                </div>\n            ))}\n        </>\n    )\n}\n\nexport default PastEvents","import { format } from 'date-fns'\n\nconst Today = () => {\n    return (\n        <section className=\"today-container\">\n            <div className=\"today\">\n                <div className=\"today-block\">\n                    <span className=\"today-label\">Today is</span>\n                    <span className=\"today-date\">{format(new Date(), 'MMMM dd')}</span>\n                </div>\n                <span className=\"arrow\"></span>\n            </div>\n        </section>\n    )\n}\n\nexport default Today\n","import { formatDistanceToNow, parseISO } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst UpcomingEvents = ({ upcomingEvents, onDelete }) => {\n    const sortedEvents = upcomingEvents.slice().sort((a, b) => a.date > b.date ? 1: -1);\n\n    return (\n        <>\n            {sortedEvents.map((event) => (\n                <div className={`event-contrainer ${event.type} ${event.color}`} key={event.id}>\n                    <div className=\"event-header\">\n                        <h2 className=\"event-title\">{event.title}</h2>\n                        <span className={`event-category ${event.color}`}><FontAwesomeIcon icon={event.type} fixedWidth /></span>\n                    </div>\n                    <div className=\"event-body\">\n                        <span className=\"event-icon\"><FontAwesomeIcon icon=\"clock\" /></span>\n                        <div className=\"event-text\">\n                            <span className=\"event-timing\">Happening </span>\n                            <span className=\"event-date\">{formatDistanceToNow(parseISO(event.date), {addSuffix: true})}</span>\n                        </div>\n                        <button className='btn-delete' onClick={() => onDelete(event.id)}><FontAwesomeIcon icon=\"trash-alt\" fixedWidth/></button>\n                    </div>\n                </div>\n            ))}\n        </>\n    )\n}\n\nexport default UpcomingEvents","import { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst AddEvent = ({ onAdd, toggleModal }) => {\n    const [title, setTitle] = useState('')\n    const [date, setDate] = useState('')\n    const [type, setType] = useState('')\n    const [color, setColor] = useState('')\n    const inputRef = useRef()\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        const localDate = date.toString()\n\n        if(!title) {\n            alert('Please add event title')\n            return\n        }\n        if (!date) {\n            alert('Please add event date')\n            return\n        }\n        if (!type) {\n            alert('Please add an event type')\n            return\n        }\n        if (!color) {\n            alert('Please select a color')\n            return\n        }\n\n        onAdd({ title, date: localDate, type, color })\n\n        setTitle('')\n        setDate('')\n        setType('')\n        setColor('')\n    }\n\n    const onClick = (e) => {\n        e.preventDefault()\n        toggleModal()\n    }\n\n    useEffect(() => {\n        inputRef.current.focus()\n    }, [])\n\n    return (\n        <>\n            <form className=\"add-form\" onSubmit={onSubmit} >\n                <div className=\"form-header\">\n                    <h2>New Event</h2>\n                    <button className='btn-close' onClick={onClick}><FontAwesomeIcon icon=\"times\" fixedWidth/></button>\n                </div>\n                <div className=\"form-control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add Title\"\n                        value={title}\n                        ref={inputRef}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        placeholder=\"MM-DD-YYYY\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-control\">\n                    <label>Category</label>\n                    <div className=\"radio-categories\">\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"holiday\"\n                                value=\"glass-cheers\"\n                                checked={type === 'glass-cheers'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"holiday\" htmlFor=\"holiday\"><FontAwesomeIcon icon=\"glass-cheers\" /></label>\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"meeting\"\n                                value=\"user-friends\"\n                                checked={type === 'user-friends'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"meeting\" htmlFor=\"meeting\"><FontAwesomeIcon icon=\"user-friends\" /></label>\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"task\"\n                                value=\"calendar-alt\"\n                                checked={type === 'calendar-alt'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"task\" htmlFor=\"task\"><FontAwesomeIcon icon=\"calendar-alt\" /></label>\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"travel\"\n                                value=\"plane\"\n                                checked={type === 'plane'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"travel\" htmlFor=\"travel\"><FontAwesomeIcon icon=\"plane\" /></label>\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"music\"\n                                value=\"music\"\n                                checked={type === 'music'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"music\" htmlFor=\"music\"><FontAwesomeIcon icon=\"music\" /></label>\n                            <input\n                                type=\"radio\"\n                                name=\"categories\"\n                                id=\"sports\"\n                                value=\"biking\"\n                                checked={type === 'biking'}\n                                onChange={(e) => setType(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"sports\" htmlFor=\"sports\"><FontAwesomeIcon icon=\"biking\" /></label>\n                    </div>\n                </div>\n                <div className=\"form-control\">\n                    <label>Color</label>\n                    <div className=\"radio-colors\">\n                            <input\n                                type=\"radio\"\n                                name=\"color\"\n                                id=\"red\"\n                                value=\"red\"\n                                checked={color === 'red'}\n                                onChange={(e) => setColor(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"red\" htmlFor=\"red\"></label>\n                            <input\n                                type=\"radio\"\n                                name=\"color\"\n                                id=\"green\"\n                                value=\"green\"\n                                checked={color === 'green'}\n                                onChange={(e) => setColor(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"green\" htmlFor=\"green\"></label>\n                            <input\n                                type=\"radio\"\n                                name=\"color\"\n                                id=\"blue\"\n                                value=\"blue\"\n                                checked={color === 'blue'}\n                                onChange={(e) => setColor(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"blue\" htmlFor=\"blue\"></label>\n                            <input\n                                type=\"radio\"\n                                name=\"color\"\n                                id=\"purple\"\n                                value=\"purple\"\n                                checked={color === 'purple'}\n                                onChange={(e) => setColor(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"purple\" htmlFor=\"purple\"></label>\n                            <input\n                                type=\"radio\"\n                                name=\"color\"\n                                id=\"grey\"\n                                value=\"grey\"\n                                checked={color === 'grey'}\n                                onChange={(e) => setColor(e.target.value)}\n                                className=\"form-check-input\"\n                            /><label className=\"grey\" htmlFor=\"grey\"></label>\n                    </div>\n                </div>\n                <button className='btn-block' type='submit' >Add Event</button>\n            </form>\n            <div className=\"overlay\"></div>\n        </>\n    )\n}\n\nexport default AddEvent\n","import './App.css'\nimport { useState, useEffect } from 'react'\nimport useLocalStorage from './Hooks/useLocalStorage'\nimport { isBefore, isAfter, parseISO } from 'date-fns'\nimport PastEvents from './Components/PastEvents'\nimport Today from './Components/Today'\nimport UpcomingEvents from './Components/UpcomingEvents'\nimport AddEvent from './Components/AddEvent'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faCheckCircle, faClock, faTimes, faPlane, faUserFriends, faCalendarAlt, faGlassCheers, faBiking, faMusic, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst App = () => {\n  library.add(faPlus, faCheckCircle, faClock, faTimes, faPlane, faUserFriends, faCalendarAlt, faGlassCheers, faBiking, faMusic, faTrashAlt )\n\n  const [showAddEvent, setShowAddEvent] = useState (false)\n\n  const [allEvents, setAllEvents] = useLocalStorage(\"allEvents\", [\n    // {\n    //   id: 1,\n    //   title: \"July 4\",\n    //   date: \"2021-07-04\",\n    //   type: \"glass-cheers\",\n    //   color: \"green\",\n    // },\n    // {\n    //   id: 2,\n    //   title: \"Meeting\",\n    //   date: \"2021-07-27\",\n    //   type: \"briefcase\",\n    //   color: \"red\",\n    // },\n    // {\n    //   id: 3,\n    //   title: \"Susan's Birthday\",\n    //   date: \"2021-08-10\",\n    //   type: \"glass-cheers\",\n    //   color: \"blue\",\n    // },\n    // {\n    //   id: 5,\n    //   title: \"Vegas\",\n    //   date: \"2022-07-25\",\n    //   type: \"plane\",\n    //   color: \"blue\",\n    // },\n    // {\n    //   id: 4,\n    //   title: \"Food Shopping\",\n    //   date: \"2021-08-29\",\n    //   type: \"thumbtack\",\n    //   color: \"grey\",\n    // },\n  ])\n\n  const [pastEvents, setPastEvents] = useState([])\n  const [upcomingEvents, setUpcomingEvents] = useState([])\n\n  //add event\n  const addEvent = (event) => {\n    const id = Math.floor(Math.random() * 10000) +1\n    const newEvent = { id, ...event }\n    setAllEvents([...allEvents, newEvent])\n    setShowAddEvent(!showAddEvent)\n  }\n\n  //delete task\n  const deleteTask = (id) => {\n    setAllEvents(allEvents.filter((event) => event.id !== id))\n  }\n\n  //toggle modal\n  const toggleModal = () => {\n    setShowAddEvent(!showAddEvent)\n  }\n\n  useEffect(() => {\n    setPastEvents(allEvents.filter(event => isBefore(parseISO(event.date), new Date())));\n    setUpcomingEvents(allEvents.filter(event => isAfter(parseISO(event.date), new Date())));\n  }, [allEvents])\n\n  return (\n    <div className=\"App\">\n      {pastEvents.length > 0 ? <PastEvents pastEvents={pastEvents} onDelete={deleteTask} /> : ''}\n      <Today />\n      {upcomingEvents.length > 0 ? <UpcomingEvents upcomingEvents={upcomingEvents} onDelete={deleteTask} /> : ''}\n      {showAddEvent && <AddEvent onAdd={addEvent} toggleModal={toggleModal} />}\n      <button className='add-btn' onClick={toggleModal}><FontAwesomeIcon icon=\"plus\" /></button>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}